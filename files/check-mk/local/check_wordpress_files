#!/bin/bash
set -eu -o pipefail

# no wordpress sites? don't report anything then
if ! ls /srv/www/*/wordpress &>/dev/null && ! ls /srv/www/*/wp-admin &>/dev/null ; then
  exit 0
fi

check_name='check_wordpress_files'
if [ -r "${MK_CONFDIR:-/etc/check_mk}/${check_name}" ] ; then
  # shellcheck source=/dev/null
  . "${MK_CONFDIR:-/etc/check_mk}/${check_name}"
fi

file_exceptions=()
file_exceptions+=(".htaccess")
file_exceptions+=("favicon.ico")
file_exceptions+=("index.php")
file_exceptions+=("license.txt")
file_exceptions+=("liesmich.html")
file_exceptions+=("readme.html")
file_exceptions+=("robots.txt")
file_exceptions+=("wp-activate.php")
file_exceptions+=("wp-blog-header.php")
file_exceptions+=("wp-comments-post.php")
file_exceptions+=("wp-config-sample.php")
file_exceptions+=("wp-cron.php")
file_exceptions+=("wp-links-opml.php")
file_exceptions+=("wp-load.php")
file_exceptions+=("wp-login.php")
file_exceptions+=("wp-mail.php")
file_exceptions+=("wp-settings.php")
file_exceptions+=("wp-signup.php")
file_exceptions+=("wp-trackback.php")
file_exceptions+=("xmlrpc.php")

if [[ -n "${IGNORE_FILES[*]}" ]] ; then
  file_exceptions+=("${IGNORE_FILES[@]}")
fi

find_file_exceptions=()
for exceptions in "${file_exceptions[@]}" ; do
  find_file_exceptions+=(! -name "${exceptions}")
done

directory_exceptions=()
directory_exceptions+=("wp-includes")
directory_exceptions+=("wp-content")
directory_exceptions+=("wp-admin")
directory_exceptions+=(".")

if [[ -n "${IGNORE_DIRECTORIES[*]}" ]] ; then
  directory_exceptions=("${directory_exceptions[@]}" "${IGNORE_DIRECTORIES[@]}")
fi

find_dir_exceptions=()
for exceptions in "${directory_exceptions[@]}" ; do
  find_dir_exceptions+=(! -name "${exceptions}")
done

declare -A wp_problems
declare -a wp_sites

shopt -s nullglob
for site in /srv/www/*/wordpress /srv/www/*/wp-admin ; do
  # remove /wp-admin from path
  site=${site/%\/wp-admin/}

  # sanity check if site is really a directory
  [[ ! -d "${site}" ]] && continue
  # ignore wordpress backup sites (where the path contains "backup" (case insensitiv) or "_$DATE_" or ends with "_$DATE")
  [[ ${site^^} = *BACKUP* ]] && continue
  [[ ${site} =~ _[0-9]{8}$ ]] && continue
  [[ ${site} =~ _[0-9]{8}_ ]] && continue

  # ignore symlinks to avoid multiple checks of the same wordpress instance
  [[ -L "${site}" ]] && continue

  wp_sites+=("${site}")

  cd "$site"
  unexpected_files=$(find . -maxdepth 1 -type f "${find_file_exceptions[@]}" -printf "%P ")
  unexpected_directories=$(find . -maxdepth 1 -type d "${find_dir_exceptions[@]}" -printf "%P ")

  if echo "${unexpected_files:-}" | grep -q '.' ; then
    wp_problems[$site]+="unexpected files found: ${unexpected_files}"
  fi

  if echo "${unexpected_directories:-}" | grep -q '.' ; then
    wp_problems[$site]+="unexpected directories found: ${unexpected_directories}"
  fi
done

declare -a message
for site in ${!wp_problems[*]} ; do
  message+=( "$site (${wp_problems[$site]});" )
done

if [ -n "${message:-}" ] ; then
  echo "2 ${check_name} - Problems found with ${#wp_sites[@]} wordpress site(s)" "${message[@]}"
else
  echo "0 ${check_name} - No known problems found with ${#wp_sites[@]} wordpress site(s)" "${wp_sites[@]}"
fi
